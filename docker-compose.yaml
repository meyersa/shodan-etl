services:
  # <-- Kafka --> #
  zookeeper:
    image: confluentinc/cp-zookeeper
    profiles: [ kafka, all ]
    container_name: zookeeper
    ports:
      - "2181:2181"
    env_file:
      - .env

  kafka:
    image: confluentinc/cp-kafka
    profiles: [ kafka, all ] 
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    env_file:
      - .env
    depends_on:
      - zookeeper
  # <-- End Kafka --> #

  # <-- Producers --> #
  shodan-asn-producer:
    image: python-runner
    profiles: [ all ]
    container_name: shodan_asn_producer
    build:
      context: ./
    develop:
      watch:
        - action: rebuild
          path: ./src
          target: /src
    environment:
      - SCRIPT=shodan_asn_producer
    env_file:
      - .env
    depends_on:
      - kafka

  shodan-name-producer:
    image: python-runner
    profiles: [ all ]
    container_name: shodan_name_producer
    build:
      context: ./
    develop:
      watch:
        - action: rebuild
          path: ./src
          target: /src
    environment:
      - SCRIPT=shodan_name_producer
    env_file:
      - .env
    depends_on:
      - kafka
  # <-- End Producers --> #

  # <-- Transformation --> #
  crowdsec-enrich:
    image: python-runner
    profiles: [ transform, all ]
    container_name: crowdsec_enrich
    build:
      context: ./
    develop:
      watch:
        - action: rebuild
          path: ./src
          target: /src
    environment:
      - SCRIPT=crowdsec_enrich
    env_file:
      - .env
    depends_on:
      - kafka
      
  crowdsec-lapi: 
    profiles: [ crowdsec_lapi, transform, all ]
    image: crowdsecurity/crowdsec:latest-debian
    container_name: crowdsec_lapi
    restart: always 
    environment:
      LOG_TRACE: true
      DISABLE_AGENT: true
      LOCAL_API_URL: ${CROWDSEC_LAPI_URL}
      ENROLL_KEY: "clmat9j0y0000mi08kdfow99a"
      ENROLL_INSTANCE_NAME: "shodan-etl"
      BOUNCER_KEY_ETL: ${CROWDSEC_LAPI_KEY}
    ports: 
      - "127.0.0.1:8080:8080"

  # mongodb-connector

  # flaskp-api-connector

  # dispatcher-connector

  # flask-display-connector


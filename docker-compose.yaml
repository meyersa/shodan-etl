x-common-python: &common-python
  image: python-runner
  build: 
    context: . 
  develop:
    watch: 
      - action: sync+restart
        path: ./src
        target: /src
      - action: rebuild
        path: ./requirements.txt
      - action: rebuild
        path: ./.env
  env_file:
    - .env

services:
  # <-- Kafka --> #
  zookeeper:
    image: confluentinc/cp-zookeeper
    profiles: [ kafka, all ]
    container_name: zookeeper
    ports:
      - "2181:2181"
    env_file:
      - .env

  kafka:
    image: confluentinc/cp-kafka
    profiles: [ kafka, all ] 
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    env_file:
      - .env
    # depends_on:
    #   - zookeeper
  # <-- End Kafka --> #

  # <-- Producers --> #
  shodan-asn-producer:
    <<: *common-python
    profiles: [ not-kafka, producer, all ]
    container_name: shodan_asn_producer
    environment:
      - SHODAN_QUERY=asn:AS27274
    command: ["python", "-u", "shodan_producer.py"]
    # depends_on:
    #   - kafka

  shodan-name-producer:
    <<: *common-python
    profiles: [ not-kafka, producer, all ]
    container_name: shodan_name_producer
    environment:
      - SHODAN_QUERY=CMICH
    command: ["python", "-u", "shodan_producer.py"]
    # depends_on:
    #   - kafka

  # <-- End Producers --> #

  # <-- Transformation --> #
  transformation:
    <<: *common-python
    profiles: [ not-kafka, transform, all ]
    container_name: transformation
    command: ["python", "-u", "transformation.py"]
    # depends_on:
    #   - kafka

  api-enrich:
    <<: *common-python
    profiles: [ not-kafka, transform, all ]
    container_name: api_enrich
    command: ["python", "-u", "api_enrich.py"]
    depends_on:
      - maxmind

  maxmind: 
    image: observabilitystack/geoip-api
    profiles: [ not-kafka, transform, all]
    container_name: maxmind
    volumes:
      - ./db/GeoLite2-ASN.mmdb:/srv/GeoLite2-ASN.mmdb
      - ./db/GeoLite2-City.mmdb:/srv/GeoLite2-City.mmdb
    ports: 
      - 8080:8080
    
  # mongodb-connector

  # flaskp-api-connector

  # dispatcher-connector

  # flask-display-connector

  # <-- Development --> #
  kadeck: 
    image: xeotek/kadeck:latest
    profiles: [ development ]
    container_name: kadeck
    ports: 
      - 80:80
    environment:
      - xeotek_kadeck_free="kadeck@i.meyersa.com"
      - xeotek_kadeck_port=80
  # <-- Development --> # 
  
volumes: 
  crowdsec-config:
  crowdsec-db: